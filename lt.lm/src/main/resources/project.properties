###
#
# LT project properties
#
# specify properties in the form of standard java properties, i.e.
#
# property-name = property-value
#
###

###
#
# ngram handling options
#

# 0 = no insertions
# 1 = insert at the front (default)
# 2 = insert at the end
# 3 = insert at front and end
lt.lm.insertSentenceTags = 1

# -1 = no handling, omit too short ngrams
# 0 = no handling, consider too short ngrams
# 1 = extend first word (^ hello world -> [^ ^ hello, ^ hello world])
# 2 = growing ngram size (^ hello world -> [^ hello, ^ hello world])
lt.lm.handleBoundaries = 1


###
# specific options
#

###
# Lucene ngram index creation related
#

# manually set the percentage of the rambuffer when inserting ngrams into index. Set to -1 to enable automatic setting. A good value seems to be 0.6.
lt.lm.ramBufferPercentage = -1
# specify additional sort parameters, e.g. '-T /tmp' to specify  where sort can store temporary files (cf. 'sort -T ') or '--parallel=8'. Note that relative paths are relative to the directory where sort is started from.
lt.lm.sortparam = -T ${indexdir}

###
# KneserNeyLM and ModifiedKneserNeyLM
#

# number of maximum backoff recursions to perform 
lt.lm.knMaxbackoffrecursions = -1
# backoff with uniform distribution, regardless of 'lt.lm.knmaxbackoffrecursions', {true, false} 
lt.lm.knUniformBackoff = true

##
# LtSegProvider specific
#

# choose from de.tudarmstadt.lt.seg.token.{DiffTokenizer, NonceTokenizer, EmptySpaceTokenizer, BreakTokenizer}
lt.lm.tokenizer = de.tudarmstadt.lt.seg.token.DiffTokenizer

# choose from de.tudarmstadt.lt.seg.token.{RuleSplitter, NullSplitter, LineSplitter, BreakSplitter}
lt.lm.sentenceSplitter = de.tudarmstadt.lt.seg.sentence.RuleSplitter
lt.lm.onedocperline = true 
# 0-5
lt.lm.tokenfilter = 5
# 0-4
lt.lm.tokennormalize = 3
lt.lm.merge = 1

# lt.seg.SentenceRules = <zip-file> # currently not yet supported

###
# BreakIteratorStringProvider specific
#
lt.lm.defaultLanguageCode = en
lt.lm.maxLengthSplitHeuristic = 1000

###
# BerkeleyLM specific
#
lt.lm.useCompressedBerkelyLM = false
# BerkeleyLM default = -100; log2=-7.95 <=> log10~=-2.39 ; leave empty to use auto estimated probability of unknowns (not applicable for BerkeleyLM) 
lt.lm.knUnkLog10Prob =

###